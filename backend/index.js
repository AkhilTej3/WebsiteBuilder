// Importing required modules
const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const { exec } = require('child_process');
const connectDB = require('./utils/db');
const NextApp = require('./models/applications');

// Creating an instance of Express
const app = express();


connectDB();

// Middleware setup
app.use(cors()); // Enable CORS
app.use(bodyParser.json()); // Parse JSON bodies
app.use(bodyParser.urlencoded({ extended: true })); // Parse URL-encoded bodies

// Example route
app.get('/', async (req, res) => {

  
  // exec("npx create-next-app templateapp --js --tailwind   --eslint   --app   --src-dir", (error, stdout, stderr) => {

  //   if (error) {
  //     console.error(`Error executing command: ${error}`);
  //     return;
  //   }
  //   console.log(`stdout: ${stdout}`);
  //   console.error(`stderr: ${stderr}`);
  // })


  const createNextApp = async () => {
    try {
      // Create a new Next.js application

      const layoutTsx =
        `import type { Metadata } from "next";
      import { Inter } from "next/font/google";
      import "./globals.css";

      const inter = Inter({ subsets: ["latin"] });

      export const metadata: Metadata = {
        title: "Create Next App",
        description: "Generated by create next app",
      };

      export default function RootLayout({
        children,
      }: Readonly<{
        children: React.ReactNode;
      }>) {
        return (
          <html lang="en">
            <body className={inter.className}>{children}</body>
          </html>
        );
      }`

      const PageJsx =
        `"use client"
      import axios from 'axios'
      import React, { useEffect } from 'react'

      export default function page() {

        useEffect(() => {

        }, [])

      
        return (
          <div className='flex flex-col h-[100vh] items-center justify-center'>
            <p className='text-7xl font-bold' >Hello User</p>
            <p className='text-2xl bg-blue-500 text-white p-3 mt-10 rounded-lg shadow-2xl font-bold'>This is a Starter Template</p>
          </div>
        )
      }`

      const globalStyles =
      `@tailwind base;
      @tailwind components;
      @tailwind utilities;

      :root {
          --foreground - rgb: 0, 0, 0;
          --background - start - rgb: 214, 219, 220;
          --background - end - rgb: 255, 255, 255;
        }

      @media(prefers - color - scheme: dark) {
      :root {
          --foreground - rgb: 255, 255, 255;
          --background - start - rgb: 0, 0, 0;
          --background - end - rgb: 0, 0, 0;
        }
      }`


  const newApp = new NextApp({
    name: 'My Next.js App',
    description: 'A sample Next.js application',
    version: '1.0.0',
    src: {
      app: {
        layout: layoutTsx,
        page: PageJsx,
        globalStyles: globalStyles,
      },
    }
  });

  // Save the application to the database
  await newApp.save();
  return newApp
} catch (error) {
  console.error('Error saving Next.js application:', error);
}
  };

// Call the function to create a new Next.js application
const result = createNextApp();
res.json(result);
});

// Starting the server
const port = process.env.PORT || 3003;
app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}/`);
});
